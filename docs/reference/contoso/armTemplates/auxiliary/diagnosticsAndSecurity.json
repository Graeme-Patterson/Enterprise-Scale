{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "maxLength": 6
        },
        "managementSubscriptionId": {
            "type": "string",
            "maxLength": 36,
            "defaultValue": ""
        },
        "enableLogAnalytics": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableAsc": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableAscForServers": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForAppServices": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForStorage": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSql": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKeyVault": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSqlServerVirtualMachines": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForArm": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForDns": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKubernetes": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForRegistries": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableArcMonitoring": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce Arc monitoring."
            }
        },
        "enableVmMonitoring": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VM monitoring."
            }
        },
        "enableVmssMonitoring": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VMSS monitoring."
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": ""
        },
        "mgtRgName": {
            "type": "string",
            "defaultValue": ""
        },
        "enableLaAgentAutoProvisioning": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VM monitoring."
            }
        },
        "enableVMSecurity": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VM security."
            }
        },
        "BootDiagnisticsEffect": {
            "type": "string",
            "metadata": {
                "displayName": "VM Boot Diagnostics Effect - DeployIfNotExists, AuditIfNotExists or Disabled"
            },
            "defaultValue": "DeployIfNotExists",
            "allowedValues": [
                "DeployIfNotExists",
                "AuditIfNotExists",
                "Disabled"
            ]
        }
    },
    "variables": {
        "PolicyApi": "2020-09-01",
        "RoleAssignmentApi": "2020-04-01-preview",
        "policyDefinitions": {
            // "deployAzureActivityLog": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog')]",
            "deployResourceDiagnostics": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics')]",
            // "windowsArcMonitoring": "/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203",
            // "linuxArcMonitoring": "/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf",
            "vmMonitoring": "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a",
            "vmssMonitoring": "/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad",
            "deployAzureSecurity": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard')]",
            "ascMonitoring": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            // "autoProvisionVMAgents": "/providers/Microsoft.Authorization/policyDefinitions/8e7da0a5-0a0e-4bbc-bfc0-7773c018b616",
            "vmSecurity": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policySetDefinitions/VM-Security')]"
        },
        "policyAssignmentNames": {
            // "azureActivityLog": "Deploy-AzActivity-Log",
            "vmMonitoring": "Deploy-VM-Monitoring",
            // "windowsArcMonitoring": "Deploy-WS-Arc-Monitoring",
            // "linuxArcMonitoring": "Deploy-LX-Arc-Monitoring",
            "vmssMonitoring": "Deploy-VMSS-Monitoring",
            "resourceDiagnostics": "Deploy-Resource-Diag",
            "azureSecurity": "Deploy-ASC-Security",
            "ascMonitoring": "Deploy-ASC-Monitoring",
            // "autoProvisionVMAgents": "Enable-Agent-AutoProv",
            "vmSecurity": "Deploy-VM-Security"
        },
        "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', variables('contributor'))]",
        "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "roleAssignmentNames": {
            // "deployAzureActivityLog": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').azureActivityLog))]",
            "deployVmMonitoring": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').vmMonitoring))]",
            // "deployWindowsArcMonitoring": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').windowsArcMonitoring))]",
            // "deployLinuxArcMonitoring": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').linuxArcMonitoring))]",
            "deployVmssMonitoring": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').vmssMonitoring))]",
            "deployAzureSecurity": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').azureSecurity))]",
            "deployAscMonitoring": "[guid(concat(parameters('toplevelManagementGroupPrefix'), variables('policyAssignmentNames').ascMonitoring))]",
            "deployResourceDiagnostics": "[guid(concat(parameters('topLevelManagementGroupPrefix'), variables('policyAssignmentNames').resourceDiagnostics))]",
            // "autoProvisionVMAgents": "[guid(concat(parameters('topLevelManagementGroupPrefix'), variables('policyAssignmentNames').autoProvisionVMAgents))]",
            "vmSecurity": "[guid(concat(parameters('topLevelManagementGroupPrefix'), variables('policyAssignmentNames').vmSecurity))]"
        },
        "blankTemplateEscaped": "{\"$schema\":\"https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#\",\"contentVersion\":\"1.0.0.0\",\"parameters\":{},\"variables\":{},\"resources\":[],\"outputs\":{}}",
        "mgAscResourceDeploymentName": "[take(concat('asc-mgmt', trim(deployment().location), deployment().name), 40)]",
        "mgActivityResourceDeploymentName": "[take(concat('activity-mgmt', trim(deployment().location), deployment().name), 40)]"
    },
    "resources": [
        {
            // Conditional assignment of policy to enforce Log Analytics VM extension to Windows and Linux virtual machines
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').vmMonitoring]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-VM-Monitoring",
                "displayName": "Deploy-VM-Monitoring",
                "policyDefinitionId": "[variables('policyDefinitions').vmMonitoring]",
                "nonComplianceMessages": [
                    {
                        "message": "Azure policy will deploy a Log Analytics agent and dependency agent to the VM"
                    }
                ],
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "parameters": {
                    "logAnalytics_1": {
                        "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
                    }
                }
            }
        },
        {
            // Role assignment for the conditional policy assignment to enforce Log Analytics VM extension to Windows and Linux virtual machines
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('RoleAssignmentApi')]",
            "name": "[variables('roleAssignmentNames').deployVmMonitoring]",
            "dependsOn": [
                "[variables('policyAssignmentNames').vmMonitoring]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[if(equals(parameters('enableVmMonitoring'), 'Yes'), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').vmMonitoring), variables('RoleAssignmentApi'), 'Full' ).identity.principalId), 'na')]"
            }
        },
        // {
        //     // Role assignment of the conditional VM monitoring policy assignment
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "[variables('RoleAssignmentApi')]",
        //     "name": "[variables('roleAssignmentNames').deployVmMonitoring]",
        //     "dependsOn": [
        //         "[variables('policyAssignmentNames').vmMonitoring]"
        //     ],
        //     "properties": {
        //         "roleDefinitionId": "[variables('roleDefinitionId')]",
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "principalId": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes')), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').vmMonitoring), '2018-05-01', 'Full' ).identity.principalId), 'na')]"
        //     }
        // },
        {
            // Conditional assignment of policy to enforce VMSS monitoring to Log Analytics
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmssMonitoring'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').vmssMonitoring]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-VMSS-Monitoring",
                "displayName": "Deploy-VMSS-Monitoring",
                "policyDefinitionId": "[variables('policyDefinitions').vmssMonitoring]",
                "nonComplianceMessages": [
                    {
                        "message": "Azure policy will deploy a Log Analytics agent and dependency agent to the VMSS"
                    }
                ],
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "parameters": {
                    "logAnalytics_1": {
                        "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
                    }
                }
            }
        },
        {
            // Role assignment of the conditional VMSS monitoring policy assignment
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmssMonitoring'), 'Yes'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('RoleAssignmentApi')]",
            "name": "[variables('roleAssignmentNames').deployVmssMonitoring]",
            "dependsOn": [
                "[variables('policyAssignmentNames').vmssMonitoring]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "principalId": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableVmssMonitoring'), 'Yes')), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').vmssMonitoring), variables('RoleAssignmentApi'), 'Full' ).identity.principalId), 'na')]"
            }
        },
        // {
        //     // Conditional assignment of policy to enforce Windows Arc monitoring to Log Analytics
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/policyAssignments",
        //      "apiVersion": "[variables('PolicyApi')]",
        //     "name": "[variables('policyAssignmentNames').windowsArcMonitoring]",
        //     "location": "[deployment().location]",
        //     "identity": {
        //         "type": "SystemAssigned"
        //     },
        //     "properties": {
        //         "description": "Deploy-Windows-Arc-Monitoring",
        //         "displayName": "Deploy-Windows-Arc-Monitoring",
        //         "policyDefinitionId": "[variables('policyDefinitions').windowsArcMonitoring]",
        //         "nonComplianceMessages": [
        //             {
        //                 "message": "Azure policy will deploy the Log Analytics agent to Windows Azure Arc machines if the agent isn't installed"
        //             }
        //         ],
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "parameters": {
        //             "logAnalytics": {
        //                 "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
        //             }
        //         }
        //     }
        // },
        // {
        //     // Role assignment of the conditional Windows Arc monitoring policy assignment
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "[variables('RoleAssignmentApi')]",
        //     "name": "[variables('roleAssignmentNames').deployWindowsArcMonitoring]",
        //     "dependsOn": [
        //         "[variables('policyAssignmentNames').windowsArcMonitoring]"
        //     ],
        //     "properties": {
        //         "roleDefinitionId": "[variables('roleDefinitionId')]",
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "principalId": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes')), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').windowsArcMonitoring), '2018-05-01', 'Full' ).identity.principalId), 'na')]"
        //     }
        // },
        // {
        //     // Conditional assignment of policy to enforce Linux Arc monitoring to Log Analytics
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/policyAssignments",
        //      "apiVersion": "[variables('PolicyApi')]",
        //     "name": "[variables('policyAssignmentNames').linuxArcMonitoring]",
        //     "location": "[deployment().location]",
        //     "identity": {
        //         "type": "SystemAssigned"
        //     },
        //     "properties": {
        //         "description": "Deploy-Linux-Arc-Monitoring",
        //         "displayName": "Deploy-Linux-Arc-Monitoring",
        //         "policyDefinitionId": "[variables('policyDefinitions').linuxArcMonitoring]",
        //         "nonComplianceMessages": [
        //             {
        //                 "message": "Azure policy will deploy the Log Analytics agent to Linux Azure Arc machines if the agent isn't installed"
        //             }
        //         ],
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "parameters": {
        //             "logAnalytics": {
        //                 "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
        //             }
        //         }
        //     }
        // },
        // {
        //     // Role assignment of the conditional Linux Arc monitoring policy assignment
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "[variables('RoleAssignmentApi')]",
        //     "name": "[variables('roleAssignmentNames').deployLinuxArcMonitoring]",
        //     "dependsOn": [
        //         "[variables('policyAssignmentNames').linuxArcMonitoring]"
        //     ],
        //     "properties": {
        //         "roleDefinitionId": "[variables('roleDefinitionId')]",
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "principalId": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableArcMonitoring'), 'Yes')), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').linuxArcMonitoring), '2018-05-01', 'Full' ).identity.principalId), 'na')]"
        //     }
        // },
        {
            // Conditional assignment of policy to enforce Azure Resource Diagnostics to Log Analytics
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').resourceDiagnostics]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-Resource-Diag",
                "displayName": "Deploy-Resource-Diag",
                "policyDefinitionId": "[variables('policyDefinitions').deployResourceDiagnostics]",
                "nonComplianceMessages": [
                    {
                        "message": "Azure policy will deploy diagnostic settings if they are not configured for this resource"
                    }
                ],
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "parameters": {
                    "logAnalytics": {
                        "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
                    }
                }
            }
        },
        {
            // Role assignment of Owner to the conditional Azure Resource Diagnostics policy assignment
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('RoleAssignmentApi')]",
            "name": "[variables('roleAssignmentNames').deployResourceDiagnostics]",
            "dependsOn": [
                "[variables('policyAssignmentNames').resourceDiagnostics]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "principalId": "[if(equals(parameters('enableLogAnalytics'), 'Yes'), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').resourceDiagnostics), variables('RoleAssignmentApi'), 'Full' ).identity.principalId), 'na')]"
            }
        },
        {
            // Conditional assignment of policy to enforce Azure Security Center on subscriptions
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').azureSecurity]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-ASC-Defender",
                "displayName": "Deploy-ASC-Defender",
                "policyDefinitionId": "[variables('policyDefinitions').deployAzureSecurity]",
                "nonComplianceMessages": [
                    {
                        "message": "Azure policy will deploy ASC standard if it is not enabled"
                    }
                ],
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "parameters": {
                    "pricingTierVms": {
                        "value": "[parameters('enableAscForServers')]"
                    },
                    "pricingTierSqlServers": {
                        "value": "[parameters('enableAscForSql')]"
                    },
                    "pricingTierAppServices": {
                        "value": "[parameters('enableAscForAppServices')]"
                    },
                    "pricingTierStorageAccounts": {
                        "value": "[parameters('enableAscForStorage')]"
                    },
                    "pricingTierContainerRegistry": {
                        "value": "[parameters('enableAscForRegistries')]"
                    },
                    "pricingTierKeyVaults": {
                        "value": "[parameters('enableAscForKeyVault')]"
                    },
                    "pricingTierSqlServerVirtualMachines": {
                        "value": "[parameters('enableAscForSqlServerVirtualMachines')]"
                    },
                    "pricingTierKubernetesService": {
                        "value": "[parameters('enableAscForKubernetes')]"
                    },
                    "pricingTierArm": {
                        "value": "[parameters('enableAscForArm')]"
                    },
                    "pricingTierDns": {
                        "value": "[parameters('enableAscForDns')]"
                    }
                }
            }
        },
        {
            // Role assignment of the conditional ASC policy assignment
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('RoleAssignmentApi')]",
            "name": "[variables('roleAssignmentNames').deployAzureSecurity]",
            "dependsOn": [
                "[variables('policyAssignmentNames').azureSecurity]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "principalId": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes')), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').azureSecurity), variables('RoleAssignmentApi'), 'Full' ).identity.principalId), 'na')]"
            }
        },
        {
            // Conditional assignment of policy to enable ASC monitoring
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').ascMonitoring]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "ASC-Monitoring",
                "displayName": "ASC-Monitoring",
                "policyDefinitionId": "[variables('policyDefinitions').ascMonitoring]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]"
            }
        },
        // {
        //     // Conditional assignment of Azure Security Center Auto Provisioning of LA Agent to Custom Workspace policy 
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLaAgentAutoProvisioning'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/policyAssignments",
        //      "apiVersion": "[variables('PolicyApi')]",
        //     "name": "[variables('policyAssignmentNames').autoProvisionVMAgents]",
        //     "location": "[deployment().location]",
        //     "identity": {
        //         "type": "SystemAssigned"
        //     },
        //     "properties": {
        //         "description": "Enable-ASC-Agent-AutoProvisioning",
        //         "displayName": "Enable-ASC-Agent-AutoProvisioning",
        //         "policyDefinitionId": "[variables('policyDefinitions').autoProvisionVMAgents]",
        //         "nonComplianceMessages": [
        //             {
        //                 "message": "Allow Security Center to auto provision the Log Analytics agent on your subscriptions to monitor and collect security data using a custom workspace"
        //             }
        //         ],
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "parameters": {
        //             "logAnalytics": {
        //                 "value": "[toLower(concat('/subscriptions/', parameters('managementSubscriptionId'), '/resourceGroups/', parameters('mgtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
        //             }
        //         }
        //     },
        //     "dependsOn": [
        //         "[variables('policyAssignmentNames').azureSecurity]"
        //     ]
        // },
        // {
        //     // Role assignment of the conditional Azure Security Center Auto Provisioning of LA Agent to Custom Workspace policy
        //     "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLaAgentAutoProvisioning'), 'Yes'))]",
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "[variables('RoleAssignmentApi')]",
        //     "name": "[variables('roleAssignmentNames').autoProvisionVMAgents]",
        //     "dependsOn": [
        //         "[variables('policyAssignmentNames').autoProvisionVMAgents]"
        //     ],
        //     "properties": {
        //         "roleDefinitionId": "[variables('roleDefinitionId')]",
        //         "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        //         "principalId": "[if(equals(parameters('enableLogAnalytics'), 'Yes'), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').autoProvisionVMAgents), '2018-05-01', 'Full' ).identity.principalId), 'na')]"
        //     }
        // },
        {
            // Conditional ARM deployments to invoke template from ASC on management subscription
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('mgAscResourceDeploymentName')]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments/', variables('roleAssignmentNames').deployAzureSecurity)]"
            ],
            "subscriptionId": "[parameters('managementSubscriptionId')]",
            "properties": {
                "mode": "incremental",
                "template": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes')), reference(variables('policyDefinitions').deployAzureSecurity, '2018-05-01').policyRule.then.details.deployment.properties.template, 'na')]",
                "parameters": "[if(and(not(empty(parameters('managementSubscriptionId'))), equals(parameters('enableAsc'), 'Yes')) ,reference(concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').azureSecurity), '2018-05-01').parameters, json('null'))]"
            }
        },
        {
            // Conditional assignment of Azure Security Center Auto Provisioning of LA Agent to Custom Workspace policy 
            "condition": "[equals(parameters('enableVMSecurity'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
             "apiVersion": "[variables('PolicyApi')]",
            "name": "[variables('policyAssignmentNames').vmSecurity]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-VM-Security",
                "displayName": "Deploy-VM-Security",
                "policyDefinitionId": "[variables('policyDefinitions').vmSecurity]",
                "nonComplianceMessages": [
                    {
                        "message": "Deploys  boot diagnostics for VM to managed storage if it does not exist"
                    },
                    {
                        "message": "Deploys  boot diagnostics for VM to managed storage if it does not exist",
                        "policyDefinitionReferenceId": "Deploy-Boot-Diagnostics"
                    }
                ],
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "parameters": {
                    "BootDiagnisticsEffect": {
                        "value": "[parameters('BootDiagnisticsEffect')]"
                    }
                }
            }
        },
        {
            // Role assignment of the conditional Azure Security Center Auto Provisioning of LA Agent to Custom Workspace policy
            "condition": "[equals(parameters('enableVMSecurity'), 'Yes')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('RoleAssignmentApi')]",
            "name": "[variables('roleAssignmentNames').vmSecurity]",
            "dependsOn": [
                "[variables('policyAssignmentNames').vmSecurity]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
                "principalId": "[if(equals(parameters('enableVMSecurity'), 'Yes'), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').vmSecurity), variables('RoleAssignmentApi'), 'Full' ).identity.principalId), 'na')]"
            }
        }
    ],
    "outputs": {}
}
